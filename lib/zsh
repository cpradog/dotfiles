#!/usr/bin/env sh

import files xdg gen

zsh_gen_rc() {
  templates="$(xdg_get_data 'zsh' 'rc.d')"
  if [ -d "${templates}" ]; then
    gen_file "$(file_path '.zshrc')" "$templates"
  fi
}

zsh_gen_env() {
  templates="$(xdg_get_data 'zsh' 'env.d')"
  if [ -d "${templates}" ]; then
    gen_file "$(file_path '.zshenv')" "$templates"
  fi
}

zsh_add_rc() {
  templates="$(xdg_get_data 'zsh' 'rc.d')"
  source="$1"
  target="${2:-${1##*/}}"

  file_link "$source" "$(file_path "$templates" "$target")"
  zsh_gen_rc
}

zsh_del_rc() {
  templates="$(xdg_get_data 'zsh' 'rc.d')"
  target="$(file_path "$templates" "$*")"

  if [ -d "${templates}" ]; then
    file_unlink "$target"
    zsh_gen_rc
  fi
}

zsh_add_env() {
  templates="$(xdg_get_data 'zsh' 'env.d')"
  source="$1"
  target="${2:-${1##*/}}"

  file_link "$source" "$(file_path "$templates" "$target")"
  zsh_gen_env
}

zsh_del_env() {
  templates="$(xdg_get_data 'zsh' 'env.d')"
  target="$(file_path "$templates" "$*")"

  if [ -d "${templates}" ]; then
    file_unlink "$target"
    zsh_gen_env
  fi
}

zsh_update_plugins() {
  antidote_home="$(xdg_get_cache 'zsh' 'antidote')"
  antidote_bin="$(xdg_get_bin 'antidote')"
  antidote_init="$(xdg_get_cache 'zsh' 'plugins.zsh')"
  antidote_plugins="$(xdg_get_data 'zsh' 'plugins')"

  if [ ! -e "$antidote_plugins" ]; then
    return 0
  fi

  if [ ! -d "$antidote_home" ]; then
    info 'installing antidote plugin manager'
    mkdir -p "${antidote_home%/*}"
    git clone --depth=1 https://github.com/mattmc3/antidote.git "${antidote_home}"
    chmod +x "${antidote_home}/antidote"
    mkdir -p "${antidote_bin%/*}"
    ln -s "${antidote_home}/antidote" "${antidote_bin}"
  fi

  debug 'updating plugins init script'
  mkdir -p "${antidote_init%/*}"
  "$antidote_bin" bundle <"$antidote_plugins" >"$antidote_init"

  zsh_gen_rc
}

zsh_add_plugin() {
  antidote_plugins="$(xdg_get_data 'zsh' 'plugins')"
  mkdir -p "${antidote_plugins%/*}"
  for plugin in "$@"; do
    echo "$plugin" >>"$antidote_plugins"
  done

  zsh_update_plugins
}

zsh_del_plugin() {
  antidote_plugins="$(xdg_get_data 'zsh' 'plugins')"

  if [ ! -e "$antidote_plugins" ]; then
    return 0
  fi

  mkdir -p "${antidote_plugins%/*}"
  temp=$(mktemp)
  for plugin in "$@"; do
    grep -v "$plugin" "$antidote_plugins" >"$temp" &&
      mv "$temp" "$antidote_plugins"
  done

  zsh_update_plugins
}
